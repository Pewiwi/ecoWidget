package com.twinforce.trashreminder;

import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.Context;
import android.util.Log;
import android.widget.RemoteViews;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 * Implementation of App Widget functionality.
 * App Widget Configuration implemented in {@link SimpleWidgetProviderConfigureActivity SimpleWidgetProviderConfigureActivity}
 */
public class SimpleWidgetProvider extends AppWidgetProvider {

    /*static void updateAppWidget(Context context, AppWidgetManager appWidgetManager,
                                int appWidgetId) {

        CharSequence widgetText = SimpleWidgetProviderConfigureActivity.loadTitlePref(context, appWidgetId);
        // Construct the RemoteViews object
        RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.simple_widget_provider);
        views.setTextViewText(R.id.appwidget_text, widgetText);

        // Instruct the widget manager to update the widget
        appWidgetManager.updateAppWidget(appWidgetId, views);
    }*/

    DateFormat df = new SimpleDateFormat("dd/MM/yy");
    @Override
    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
       /* // There may be multiple widgets active, so update all of them
        for (int appWidgetId : appWidgetIds) {
            updateAppWidget(context, appWidgetManager, appWidgetId);
        }*/

        final int count = appWidgetIds.length;
        Log.v("ON UPDATE", ""+count);

        Calendar calendar = Calendar.getInstance();
        int day = calendar.get(Calendar.DAY_OF_WEEK);



        for (int i = 0; i < count; i++) {
            int widgetId = appWidgetIds[i];
            String date = df.format(new Date());

            RemoteViews remoteViews = new RemoteViews(context.getPackageName(),
                    R.layout.simple_widget);
            remoteViews.setTextViewText(R.id.date, date);
            switch (day){
                case Calendar.MONDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.organic);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.organic));
                    break;
                case Calendar.TUESDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.rebuig);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.rebuig));
                    break;
                case Calendar.WEDNESDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.res);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.res));
                    break;
                case Calendar.THURSDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.vidre);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.vidre));
                    break;
                case Calendar.FRIDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.paper);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.paper));
                    break;
                case Calendar.SATURDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.res);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.res));
                    break;
                case Calendar.SUNDAY:
                    remoteViews.setImageViewResource(R.id.imageView, R.drawable.plastic);
                    remoteViews.setTextViewText(R.id.textView2, context.getString(R.string.plastic));

                    break;
            }

            appWidgetManager.updateAppWidget(widgetId, remoteViews);
        }
    }

    /*@Override
    public void onDeleted(Context context, int[] appWidgetIds) {
        // When the user deletes the widget, delete the preference associated with it.
        for (int appWidgetId : appWidgetIds) {
            SimpleWidgetProviderConfigureActivity.deleteTitlePref(context, appWidgetId);
        }
    }

    @Override
    public void onEnabled(Context context) {
        // Enter relevant functionality for when the first widget is created
    }

    @Override
    public void onDisabled(Context context) {
        // Enter relevant functionality for when the last widget is disabled
    }*/
}

